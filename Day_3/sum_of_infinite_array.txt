Sum Of Infinite Array    //// TLE HASE to find optimized solution


Problem Statement


Given an array “A” of N integers and you have also defined the new array “B” as a concatenation of array “A” for an infinite number of times.
For example, if the given array “A” is [1,2,3] then, infinite array “B” is [1,2,3,1,2,3,1,2,3,.......].
Now you are given Q queries, each query consists of two integers “L“ and “R”(1-based indexing). Your task is to find the sum of the subarray from index “L” to “R” (both inclusive) in the infinite array “B” for each query.


code--


vector<int> sumInRanges(vector<int> &arr, int n, vector<vector<long long>> &queries, int q) {
    // Write your code here
    vector<int>ans;
    long long sum=0;
    
    while(true){
        for(int x:arr){
            for(int i=0;i<q;i++){
             long long l,r;       
            l=queries[i][0];        
            r=queries[i][1];    
           for(int i=l;i<=r;i++){
               sum=sum+arr[i];
           }
        }
    }
    }
    ans.push_back(sum);
    return ans;
}